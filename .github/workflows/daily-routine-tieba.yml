name: Daily Routine Tieba

on:
  schedule:
    - cron: 0 2 * * *
  workflow_dispatch:
jobs:
  run:
    environment: daily-routine-tieba
    runs-on: ubuntu-18.04
    steps:
      # setup
      - uses: actions/checkout@v2
      # Hacks to get setup-python to work on act
      # - run: |
      #     if [ ! -f "/etc/lsb-release" ] ; then
      #       echo "DISTRIB_RELEASE=18.04" > /etc/lsb-release
      #     fi
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          # AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
      # py
      - name: Cache Python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache External Python Dependencies
        id: cache-external-py
        uses: actions/cache@v2
        with:
          path: ./py
          key: ${{ runner.os }}-external-py
      - name: Cache libzbar0 
        id: cache-libzbar0
        uses: actions/cache@v2
        with:
          path: ~/libzbar0
          key: ${{ runner.os }}-libzbar0-v1
      - name: Download libzbar0 package
        env:
          CACHE_HIT: ${{ steps.cache-libzbar0.outputs.cache-hit }}
          PKG: libzbar0
        # https://askubuntu.com/questions/30482/is-there-an-apt-command-to-download-a-deb-file-from-the-repositories-to-the-curr
        run: |
          wget -P ~/libzbar0 $(apt-get install --reinstall --print-uris -y $PKG | cut -d"'" -f2 | grep "/${PKG}_")
      - name: Install libzbar0
        run: |
          sudo apt install $(ls -d ~/libzbar0/*.deb)
      # - name: Install libzbar0
      #   env:
      #     CACHE_HIT: ${{ steps.cache-libzbar0.outputs.cache-hit }}
      #   # https://www.javaer101.com/en/article/37631919.html
      #   run: |
      #       if [[ "$CACHE_HIT" == 'true' ]]; then
      #         sudo cp --verbose --force --recursive ~/libzbar0/* /
      #       else
      #         sudo apt-get install --yes libzbar0
      #         mkdir -p ~/libzbar0
      #         for dep in libv4l-0 libv4lconvert0 libzbar0; do
      #             sudo dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/libzbar0/
      #         done
      #       fi
      - name: Get External Python Dependencies
        if: steps.cache-external-py.outputs.cache-hit != 'true'
        env:
          TIEBA_COOKIES: ${{ secrets.TIEBA_COOKIES }}
          TIEBA_USERNAME: ${{ secrets.TIEBA_USERNAME }}
        run: |
          wget -P ./py https://raw.githubusercontent.com/Aruelius/tieba_sign/master/tieba_sign.py
          wget -P ./py https://raw.githubusercontent.com/Aruelius/tieba_sign/master/requirements.txt
          cd ./py
          cat>".${TIEBA_USERNAME}"<<EOF
          ${TIEBA_COOKIES}
          EOF
          sed 's/user_lists\s*=\s*\[.*\]/user_lists = ["'${TIEBA_USERNAME}'"]/' tieba_sign.py >tieba_sign_run.py
      - name: Run tiebe sign
        # env:
        #   LD_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu/libzbar.so.0
        run: |
          cd py
          pip3 install -r requirements.txt 1>/dev/null
          python3 tieba_sign_run.py 1>/dev/null
